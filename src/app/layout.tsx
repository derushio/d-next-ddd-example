/**
 * TSyringe DI Container初期化
 * アプリケーション起動時に必ずコンテナを初期化する
 */
import 'reflect-metadata';

// DIコンテナ設定をインポート

import { geistMonoFont, geistSansFont } from '@/app/fonts';
import '@/app/globals.css';
import { AppToast } from '@/components/common/toast/AppToast';
import { BodyContainer } from '@/components/layout/container/BodyContainer';
import { BodyContainerClient } from '@/components/layout/container/BodyContainerClient';
import { SessionProvider } from '@/components/providers/SessionProvider';
import '@/layers/infrastructure/di/container';

import type { Metadata } from 'next';

/**
 * Tailwind v4ダークモード用のスクリプト
 */
function ThemeModeScript() {
  return (
    <script
      dangerouslySetInnerHTML={{
        __html: `
          (function() {
            const theme = localStorage.getItem('theme') || 'system';
            const isDark = theme === 'dark' || (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);
            document.documentElement.classList.toggle('dark', isDark);
          })()
        `,
      }}
    />
  );
}

/**
 * アプリのメタデータ
 */
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

/**
 * 全てのページで読み込まれるレイアウト
 * Server Component
 *
 * DDD/Clean Architecture パターン:
 * - DIコンテナ初期化をアプリケーション起動時に実行
 * - NextAuthのSessionProviderでセッション管理統合
 */
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang='en' className='h-full' suppressHydrationWarning>
      <head>
        <ThemeModeScript />
      </head>
      <body
        className={`${geistSansFont.className} ${geistMonoFont.className} antialiased h-full`}
      >
        <SessionProvider>
          <BodyContainerClient>
            <BodyContainer>
              {children}
              <AppToast />
            </BodyContainer>
          </BodyContainerClient>
        </SessionProvider>
      </body>
    </html>
  );
}
